<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>com.salvis</groupId>
	<artifactId>com.salvis.plscope.sqldev</artifactId>
	<version>1.0.0</version>
	<packaging>bundle</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- SQL Developer 4.0 uses JDK 1.7, SQL Developer 4.1 use JDK 1.8, SQL Developer 22.2.0 JDK 11 -->
		<jdk.version>7</jdk.version>
		<jdk.test.version>17</jdk.test.version>
		<sqldev.basedir>/Applications/SQLDeveloper22.2.0.app/Contents/Resources/sqldeveloper</sqldev.basedir>
		<final.name>plscope-utils_for_SQLDev_${project.version}</final.name>
	</properties>
	<dependencies>
		<!-- SQL Developer dependencies not available in public Maven repositories -->
		<dependency>
			<groupId>oracle</groupId>
			<artifactId>oracle.dbtools-common</artifactId>
			<version>22.2.0</version>
			<scope>system</scope>
			<systemPath>${sqldev.basedir}/sqldeveloper/lib/dbtools-common.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>oracle</groupId>
			<artifactId>oracle.sqldeveloper</artifactId>
			<version>22.2.0</version>
			<scope>system</scope>
			<systemPath>${sqldev.basedir}/sqldeveloper/extensions/oracle.sqldeveloper.jar</systemPath>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- access the database via JdbcTemplate -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>5.3.20</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Oracle JDBC driver -->
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8-production</artifactId>
			<version>21.6.0.0.1</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build Settings -->
	<build>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>3.10.1</version>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${jdk.version}</release>
					<testRelease>${jdk.test.version}</testRelease>
					<includes>
						<include>**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<!-- version inherited from plugin section -->
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyyMMdd.HHmmss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<copy failonerror="true" file="sqldeveloper.xml" tofile="target/sqldeveloper.xml" />
								<copy failonerror="true" file="bundle.xml" tofile="target/bundle.xml" />
								<copy failonerror="true" file="extension.xml" tofile="target/classes/META-INF/extension.xml" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<urls>
								<url>
									file:///${project.basedir}/src/main/resources/com/salvis/plscope/sqldev/PlscopeResources.properties
								</url>
							</urls>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>${project.basedir}/target/sqldeveloper.xml</include>
						<include>${project.basedir}/target/bundle.xml</include>
						<include>${project.basedir}/target/classes/META-INF/extension.xml</include>
					</includes>
					<replacements>
						<replacement>
							<token>#EXTENSION_VERSION#</token>
							<!--suppress UnresolvedMavenProperty -->
							<value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${buildNumber}</value>
						</replacement>
						<replacement>
							<token>#EXTENSION_SHORT_VERSION#</token>
							<!--suppress UnresolvedMavenProperty -->
							<value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</value>
						</replacement>
						<replacement>
							<token>#EXTENSION_DEPLOYABLE#</token>
							<value>${final.name}.zip</value>
						</replacement>
						<replacement>
							<token>#EXTENSION_NAME#</token>
							<!--suppress UnresolvedMavenProperty -->
							<value>${EXTENSION_NAME}</value>
						</replacement>
						<replacement>
							<token>#EXTENSION_DESCRIPTION#</token>
							<!--suppress UnresolvedMavenProperty -->
							<value>${EXTENSION_DESCRIPTION}</value>
						</replacement>
						<replacement>
							<token>#EXTENSION_OWNER#</token>
							<!--suppress UnresolvedMavenProperty -->
							<value>${EXTENSION_OWNER}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>3.3.0</version>
				<extensions>true</extensions>
				<configuration>
					<finalName>${project.name}</finalName>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<instructions>
						<Bundle-SymbolicName>${project.name}</Bundle-SymbolicName>
						<!--suppress UnresolvedMavenProperty -->
						<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</Bundle-Version>
						<Bundle-Build>${buildNumber}</Bundle-Build>
						<Include-Resource>
							{maven-resources},
							{maven-dependencies},
							META-INF/extension.xml=target/classes/META-INF/extension.xml
						</Include-Resource>
						<Require-Bundle>
							oracle.sqldeveloper,
							oracle.sqldeveloper.report
						</Require-Bundle>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.4.1</version>
				<configuration>
					<finalName>${final.name}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>sqldev_assembly.xml</descriptor>
					</descriptors>
					<recompressZippedFiles>true</recompressZippedFiles>
				</configuration>
				<executions>
					<execution>
						<id>deploy-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[3.0.1,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[3.3.0,)
										</versionRange>
										<goals>
											<goal>parse-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.4</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- More Project Information -->
	<name>com.salvis.plscope.sqldev</name>
	<description>SQL Developer extension to intergrate PL/Scope.</description>
	<url>https://github.com/PhilippSalvisberg/plscope-utils</url>
	<inceptionYear>2017</inceptionYear>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>salvis</name>
		<url>https://www.salvis.com/</url>
	</organization>
	<developers>
		<developer>
			<email>philipp.salvisberg@trivadis.com</email>
			<name>Philipp Salvisberg</name>
			<url>https://github.com/PhilippSalvisberg/</url>
			<id>PhilippSalvisberg</id>
			<roles>
				<role>lead</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<!-- Environment Settings -->
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/PhilippSalvisberg/plscope-utils/issues</url>
	</issueManagement>
	<scm>
		<connection>scm:git:git://github.com/PhilippSalvisberg/plscope-utils.git</connection>
		<developerConnection>scm:git:git@github.com:PhilippSalvisberg/plscope-utils.git</developerConnection>
		<tag>master</tag>
		<url>https://github.com/PhilippSalvisberg/plscope-utils/</url>
	</scm>

	<!-- Profiles as workaround for https://youtrack.jetbrains.com/issue/IDEA-85478 as described in -->
	<!-- https://intellij-support.jetbrains.com/hc/en-us/community/posts/360009767720-I-want-to-run-tests-with-different-java-version-than-my-source-java-version -->
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>skip.native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<version>3.10.1</version>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<!-- different Java version for main and test -->
							<!-- works with Maven builder from IDE or command line -->
							<release>${jdk.version}</release>
							<testRelease>${jdk.test.version}</testRelease>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>idea</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>idea.maven.embedder.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<version>3.10.1</version>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<!-- IDEA requires same Java version for main and test -->
							<!-- see https://youtrack.jetbrains.com/issue/IDEA-85478 -->
							<release>${jdk.test.version}</release>
							<testRelease>${jdk.test.version}</testRelease>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
